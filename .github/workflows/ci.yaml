name: CI

on:
  push:
  pull_request:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  check-format:
      if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v5
        - name: Setup .NET SDK v7.0.x
          uses: actions/setup-dotnet@v5
          with:
            dotnet-version: 7.0.x
        - name: Restore tool
          run: dotnet tool restore
        - name: Check format
          run: dotnet tool run dotnet-format  -- --check

  Bulldog:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup .NET SDK v7.0.x
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 7.0.x
      - name: Run './build.cmd FullBuild'
        run: ./build.cmd FullBuild
      - name: Upload NuGet package artifacts
        uses: actions/upload-artifact@v5
        with:
          name: nuget-packages
          path: artefacts/*.nupkg

  Bulldog-Linux:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup .NET SDK v7.0.x
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 7.0.x
      - name: Run './build.cmd FullBuild'
        run: ./build.cmd FullBuild
  
  # Publish NuGet packages when a tag is pushed.
  # Build needs to succeed first, including having a tag name that matches the version number.
  publish-release:
    if: ${{ !github.event.repository.fork && startsWith(github.ref, 'refs/tags/v') }}
    needs: Bulldog
    runs-on: windows-latest
    steps:
      - name: Download NuGet package artifacts
        uses: actions/download-artifact@v6
        with:
          name: nuget-packages
      - name: Publish to GitHub release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artefacts/"
          name: "bulldog-${{ github.ref_name }}"
      - name: Publish to NuGet
        run: |
          if ("${{ github.ref }}" -like "refs/tags/v*") {
              $tag = "${{ github.ref }}".SubString(11)
              $expectedBulldogFile = "artefacts/Bulldog.$tag.nupkg"

              # Check whether the tag and the package version match together
              if (-not (Test-Path -Path $expectedBulldogFile)) {
                  echo "::error ::Expected file $expectedBulldogFile doesn't exist"
                  exit 1
              }
              dotnet nuget push $expectedBulldogFile --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
          }
